assig-1
*************************************
class Solution:
    def maximumSumSubarray (self,K,Arr,N):
        winsum=sum(Arr[:K])
        maxsum=winsum
        for i in range(N-K):#0<5
            winsum=winsum-Arr[i]+Arr[i+K]
            maxsum=max(maxsum,winsum)
        return maxsum
_______________________________________
assig-2
****************************************
class Solution:
    def minSubArrayLen(self, target: int, nums: List[int]) -> int:
        start=0
        end=0
        cursum=0
        minlength=1000000
        n=len(nums)
        while end<n:#6<6
            cursum=cursum+nums[end]
            end=end+1
            while start<end and cursum>=target:
                cursum=cursum-nums[start]
                start=start+1
                minlength=min(minlength,end-start+1)
        if minlength==1000000:
            return 0
        else:
            return  minlength
_________________________________________
asssig-3
***********************************
def minSum (arr, n) : 
        for i in range(1,n):
            if arr[i]<=arr[i-1]:
                arr[i]=arr[i-1]+1
        return sum(arr)
_____________________________
